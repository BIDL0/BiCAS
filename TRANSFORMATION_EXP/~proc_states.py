#!/usr/bin/env python

import os, sys, glob

rows = 0    # pocet radku pocatecniho stavu zaroven specifikuje vysku CA
cols = 0    # pocet radku pocatecniho stavu zaroven specifikuje sirku CA
states = 0  # pocet stavu CA
steps = 0   # pocet kroku CA pro vyhodnoceni fitness
rwidth = 0  # sirka repliky
rheight = 0 # vyska repliky
replics = 0 # pozadovany pocet replik

os.system("rm -f *.h *.cas")

def write_istate():
    global rows, cols, states, steps, replics
    
    inp = open("01-ca_config.txt", "r")
    out = open("default.cas", "w")
    
    head = 1
    for line in inp:
        if head == 1:  # prvni radek musi udavat pocet stavu, replik a kroku
            line0 = line.strip().replace(' ', ',').split(',')
            states = line0[0]
            replics = line0[1]
            steps = line0[2]
            head = 0
        elif line != "\n":
            if cols == 0:
                cols = len(line) / 2
            out.write(line)
            rows = rows + 1
        else:
            break
    
    inp.close()
    out.close()
    
def write_cstates():
    global rwidth, rheight
    
    inp = open("01-ca_config.txt", "r")
    out = open("states.h", "w")
    out.write("// DO NOT EDIT THIS FILE MANUALLY,\n")
    out.write("// GENERATED ACCORDING TO 01-ca_config.txt.\n\n")

    buf = ""
    out.write("#define PATTERN \\\n")
    head = 1
    for line in inp:
        if head == 1:
            head = 0
        else:
            if line == "\n":
                out.write(buf + "\n")
                out.write("\n#define TARGETP \\\n")
            else:
                rheight = rheight + 1
                rwidth = len(line) / 2
                if len(buf) > 0:
                    out.write(buf + "\\\n")
            if line != "\n":
                c_line = line.strip().replace(" ", ",")
                c_line = "{" + c_line + "},"
                buf = c_line
            else:
                buf = ""
                rheight = 0
    out.write(buf+"\n")

    inp.close()
    out.close()
    
def write_params():
    global rows, cols, states, steps, rwidth, rheight, replics
    
    out = open("sca_params.h", "w")
    out.write("// DO NOT EDIT THIS FILE MANUALLY,\n")
    out.write("// GENERATED ACCORDING TO 01-ca_config.txt.\n\n")
    out.write("#define STATES %s\n" % states)
    out.write("#define CA_STEPS %s\n" % steps)
    out.write("#define CA_ROWS %d\n" % rows)
    out.write("#define CA_COLS %d\n" % cols)
    out.write("#define RWIDTH %d\n" % rwidth)
    out.write("#define RHEIGHT %d\n" % rheight)
    out.write("#define REPLICS_REQ %s\n" % replics)
    
    out.close()
        
def main():
    global rows, cols, states, steps
    write_istate()
    write_cstates()
    write_params()  # nutno volat jako posledni, drive parametry nejsou znamy !!
    
if __name__ == "__main__":
    main()
